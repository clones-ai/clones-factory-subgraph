specVersion: 1.2.0
indexerHints:
  prune: auto
schema:
  file: ./schema.graphql
dataSources:
  # RewardPoolFactory - Main factory for creating pools
  - kind: ethereum
    name: RewardPoolFactory
    network: base-sepolia
    source:
      address: "0x85Eb0b152494D403f0C3e2e046744BE9A4599ca2"
      abi: RewardPoolFactory
      startBlock: 30223342
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Factory
        - Pool
        - Token
        - Publisher
      abis:
        - name: RewardPoolFactory
          file: ./abis/RewardPoolFactory.json
      eventHandlers:
        - event: PoolCreated(indexed address,indexed address,indexed address,bytes32,uint256)
          handler: handlePoolCreated
        - event: TokenAllowedUpdated(indexed address,bool)
          handler: handleTokenAllowedUpdated
        - event: PublisherRotationInitiated(indexed address,indexed address,uint256)
          handler: handlePublisherRotationInitiated
        - event: PublisherRotationCancelled(indexed address,indexed address)
          handler: handlePublisherRotationCancelled
      file: ./src/factory.ts
  
  # ClaimRouter - Batch claims processing
  - kind: ethereum
    name: ClaimRouter
    network: base-sepolia
    source:
      address: "0xC14f53F92778F17268730F55ffeAB3ac51e38cf9"
      abi: ClaimRouter
      startBlock: 30223342
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - BatchClaim
        - ClaimSuccess
        - ClaimFailure
      abis:
        - name: ClaimRouter
          file: ./abis/ClaimRouter.json
      eventHandlers:
        - event: BatchClaimed(indexed address,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleBatchClaimed
        - event: ClaimSucceeded(indexed address,indexed address,indexed address,uint256,uint256,uint256)
          handler: handleClaimSucceeded
        - event: ClaimFailed(indexed address,indexed address,string)
          handler: handleClaimFailed
        - event: FactoryApprovalUpdated(indexed address,bool)
          handler: handleFactoryApprovalUpdated
      file: ./src/claim-router.ts

# Template for dynamically created vault contracts
templates:
  - kind: ethereum
    name: RewardPoolVault
    network: base-sepolia
    source:
      abi: RewardPoolImplementation
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Pool
        - Claim
        - Funding
      abis:
        - name: RewardPoolImplementation
          file: ./abis/RewardPoolImplementation.json
      eventHandlers:
        - event: Funded(indexed address,indexed address,uint256)
          handler: handleFunded
        - event: ClaimedMinimal(indexed address,indexed address,uint256)
          handler: handleClaimed
        - event: PlatformTreasuryUpdated(indexed address,indexed address)
          handler: handlePlatformTreasuryUpdated
        - event: EmergencySweep(indexed address,uint256)
          handler: handleEmergencySweep
      file: ./src/vault.ts