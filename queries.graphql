# GraphQL Queries for Factory Discovery and Pool Analytics
# Optimized queries for desktop application integration

# =====================================
# FACTORY DISCOVERY QUERIES
# =====================================

# Query all active pools with advanced search functionality
query GetPoolsForSearch(
  $first: Int = 50,
  $skip: Int = 0,
  $search: String = "",
  $skills: [String!] = [],
  $tokenFilter: [String!] = [],
  $creatorFilter: Bytes = null,
  $minFunding: BigInt = "0"
) {
  pools(
    first: $first,
    skip: $skip,
    where: {
      and: [
        { isActive: true },
        { totalFunded_gte: $minFunding },
        { creator: $creatorFilter },
        { token_in: $tokenFilter },
        {
          or: [
            { searchString_contains_nocase: $search },
            { description_contains_nocase: $search },
            { skills_contains: $skills },
          ]
        }
      ]
    },
    orderBy: lastActivityAt,
    orderDirection: desc
  ) {
    id
    creator
    token {
      id
      symbol
      name
      decimals
    }
    factory {
      id
      treasury
    }
    # Pool Statistics for UI
    totalFunded
    totalClaimed
    totalUsers
    totalClaims
    totalFees
    isActive
    lastActivityAt
    # Search Metadata
    description
    skills
    searchString
    # Timestamps
    createdAt
    createdAtBlock
    updatedAt
  }
}

# Query pools by specific skills/task types for desktop search
query GetPoolsBySkills(
  $skills: [String!] = [],
  $first: Int = 20
) {
  pools(
    first: $first,
    where: {
      and: [
        { isActive: true },
        { skills_contains: $skills },
      ]
    },
    orderBy: lastActivityAt,
    orderDirection: desc
  ) {
    id
    creator
    totalFunded
    totalClaimed
    totalUsers
    isActive
    lastActivityAt
    token {
      id
      symbol
      decimals
      name
    }
    factory {
      id
    }
    # Metadata
    skills
    description
    searchString
    updatedAt
  }
}

# Search pools by full-text search string
query SearchPoolsByText(
  $searchText: String!,
  $first: Int = 50,
  $skip: Int = 0
) {
  pools(
    first: $first,
    skip: $skip,
    where: {
      and: [
        { isActive: true },
        { searchString_contains_nocase: $searchText }
      ]
    },
    orderBy: lastActivityAt,
    orderDirection: desc
  ) {
    id
    creator
    totalFunded
    totalClaimed
    totalUsers
    isActive
    lastActivityAt
    token {
      id
      symbol
      name
      decimals
    }
    description
    searchString
    createdAt
    updatedAt
  }
}

# Get all unique skills for autocomplete/filtering
query GetAvailableSkills {
  pools(
    first: 1000,
    where: { isActive: true }
  ) {
    skills
  }
}

# Get pools with metadata updates for tracking changes
query GetPoolMetadataUpdates(
  $poolId: String = null,
  $first: Int = 50,
  $skip: Int = 0
) {
  poolMetadataUpdates(
    first: $first,
    skip: $skip,
    where: {
      pool: $poolId
    },
    orderBy: timestamp,
    orderDirection: desc
  ) {
    id
    pool {
      id
      creator
    }
    updater
    skills
    description
    searchString
    timestamp
    blockNumber
  }
}

# Query factory statistics for dashboard
query GetFactoryOverview {
  factoryStats(id: "factory-stats") {
    totalPools
    totalVolume
    totalFees
    totalUsers
    totalClaims
    averagePoolSize
    updatedAt
  }
  
  factories {
    id
    totalPools
    publisher
    oldPublisher
    graceEndTime
  }
}

# =====================================
# POOL ANALYTICS QUERIES  
# =====================================

# Detailed pool analytics for desktop factory management
query GetPoolDetails($poolId: ID!) {
  pool(id: $poolId) {
    id
    creator
    token {
      id
      symbol
      name
      decimals
      totalPools
    }
    factory {
      id
      publisher
      treasury
    }
    
    # Pool Statistics
    totalFunded
    totalClaimed  
    totalFees
    totalUsers
    totalClaims
    isActive
    lastActivityAt
    
    # Recent Activity
    claims(
      first: 10,
      orderBy: timestamp,
      orderDirection: desc
    ) {
      id
      user {
        id
      }
      cumulativeAmount
      grossAmount
      feeAmount
      netAmount
      timestamp
      transactionHash
    }
    
    fundings(
      first: 10,
      orderBy: timestamp,
      orderDirection: desc
    ) {
      id
      funder {
        id
      }
      amount
      timestamp
      transactionHash
    }
    
    # Metadata
    description 
    skills
    searchString
  }
}

# User claim history for farmer dashboard
query GetUserClaimHistory(
  $userAddress: ID!,
  $first: Int = 50,
  $skip: Int = 0
) {
  user(id: $userAddress) {
    id
    totalClaimed
    totalFeesPaid
    uniquePools
    totalClaims
    firstActivityAt
    lastActivityAt
    
    claims(
      first: $first,
      skip: $skip,
      orderBy: timestamp,
      orderDirection: desc
    ) {
      id
      pool {
        id
        creator
        token {
          symbol
          name
          decimals
        }
        description
      }
      cumulativeAmount
      grossAmount
      feeAmount
      netAmount
      timestamp
      transactionHash
      blockNumber
    }
  }
}

# =====================================
# BATCH CLAIMS ANALYTICS
# =====================================

# Batch claim analytics for performance monitoring  
query GetBatchClaimAnalytics(
  $first: Int = 100,
  $skip: Int = 0,
  $timeframe: BigInt = "0"
) {
  batchClaims(
    first: $first,
    skip: $skip,
    where: {
      timestamp_gte: $timeframe
    },
    orderBy: timestamp,
    orderDirection: desc
  ) {
    id
    caller
    successful
    failed
    totalGross
    totalFees
    totalNet
    gasUsed
    gasPrice
    gasCost
    timestamp
    blockNumber
    
    # Success/Failure Details
    successes(first: 5) {
      vault
      account
      factory
      gross
      fee
      net
    }
    
    failures(first: 5) {
      vault
      account
      reason
    }
  }
}

# Daily statistics for analytics dashboard
query GetDailyStats(
  $startDate: String!,
  $endDate: String!
) {
  dailyStatistics(
    where: {
      date_gte: $startDate,
      date_lte: $endDate
    },
    orderBy: date,
    orderDirection: asc
  ) {
    id
    date
    poolsCreated
    volume
    fees
    uniqueUsers
    totalClaims
    batchClaims
    averageGasPrice
    totalGasUsed
    averageClaimCost
  }
}

# =====================================
# TOKEN ANALYTICS
# =====================================

# Token performance analytics
query GetTokenAnalytics {
  tokens(
    where: {
      isAllowed: true
    },
    orderBy: totalVolume,
    orderDirection: desc
  ) {
    id
    symbol
    name
    decimals
    isAllowed
    totalPools
    totalVolume
    totalFees
  }
}

# =====================================
# PUBLISHER MANAGEMENT
# =====================================

# Publisher rotation history for governance monitoring
query GetPublisherRotations(
  $factoryAddress: String!,
  $first: Int = 20
) {
  publisherRotations(
    where: {
      factory: $factoryAddress
    },
    first: $first,
    orderBy: initiatedAt,
    orderDirection: desc
  ) {
    id
    factory {
      id
    }
    oldPublisher
    newPublisher
    graceEndTime
    status
    initiatedAt
    completedAt
  }
}

# =====================================
# DESKTOP-SPECIFIC SEARCH QUERIES
# =====================================

# Optimized search for desktop factory browser
query SearchFactoriesDesktop(
  $searchText: String!,
  $tokenAddress: String = null,
  $minActivity: BigInt = "0",
  $limit: Int = 25
) {
  pools(
    first: $limit,
    where: {
      and: [
        { isActive: true },
        { lastActivityAt_gte: $minActivity },
        { token: $tokenAddress },
        {
          or: [
            { description_contains_nocase: $searchText }
          ]
        }
      ]
    },
    orderBy: lastActivityAt,
    orderDirection: desc
  ) {
    id
    creator
    token {
      symbol
      name
      decimals
    }
    totalFunded
    totalUsers
    lastActivityAt
    description
    # Minimal data for fast loading
  }
}

# Factory creator dashboard - get all pools for a specific creator
query GetCreatorPools(
  $creatorAddress: Bytes!,
  $first: Int = 50
) {
  pools(
    where: {
      creator: $creatorAddress
    },
    first: $first,
    orderBy: createdAt,
    orderDirection: desc
  ) {
    id
    token {
      symbol
      name
      decimals
    }
    totalFunded
    totalClaimed
    totalUsers
    totalClaims
    totalFees
    isActive
    lastActivityAt
    createdAt
    
    # Recent activity summary
    claims(first: 3, orderBy: timestamp, orderDirection: desc) {
      timestamp
      netAmount
    }
    
    fundings(first: 3, orderBy: timestamp, orderDirection: desc) {
      timestamp  
      amount
    }
  }
}

# Health check query for monitoring
query HealthCheck {
  _meta {
    deployment
    hasIndexingErrors
    block {
      number
      timestamp
    }
  }
}